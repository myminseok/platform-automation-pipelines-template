---
platform: linux

inputs:
- name: pipelines
- name: config 
- name: generated-certificate

# all params are required to be filled out
params:
  CERTIFICATE_FILE: generated-certificate/certificates*.tgz
  # -rw-------    1 root     root          4087 May 31 13:51 _.awstest.pcfdemo.net.crt
  # -rw-------    1 root     root          1648 May 31 13:51 _.awstest.pcfdemo.net.issuer.crt
  # -rw-------    1 root     root           242 May 31 13:51 _.awstest.pcfdemo.net.json
  # -rw-------    1 root     root          3243 May 31 13:51 _.awstest.pcfdemo.net.key
  SUBDOMAIN: 

  CREDHUB_CLIENT:
  CREDHUB_SECRET:
  CREDHUB_SERVER:
  # - Required
  # - Credentials to talk to credhub server
  CREDHUB_CA_CERT:
  # - Optional
  # - This is only necessary if your Concourse worker
  #   is not already configured to trust the CA used for Credhub.
  # - If more than one CA cert is required (ie the UAA),
  #   the CA certs can be concatenated together and separated by a newline.
  #   For example,
  #   CREDHUB_CA_CERT: |
  #     -----BEGIN CERTIFICATE-----
  #     ...credhub cert...
  #     -----END CERTIFICATE-----
  #     -----BEGIN CERTIFICATE-----
  #     ...UAA cert...
  #     -----END CERTIFICATE-----
  
  PIPELINE_NAME: ""
  # naming rule is "$PREFIX/${PIPELINE_NAME}/key...""
  PREFIX: /concourse/main
  KEY_NAME: networking_poe_ssl_certs_0

 
run:
  path: sh
  args:
    - -exc
    - |
      set -e
  
      # NOTE: The credhub cli does not ignore empty/null environment variables.
      # https://github.com/cloudfoundry-incubator/credhub-cli/issues/68
      if [ -z "$CREDHUB_CA_CERT" ]; then
        unset CREDHUB_CA_CERT
        export SKIP_TLS_VALIDATION="--skip-tls-validation"
      fi

      credhub login -s $CREDHUB_SERVER --client-name=$CREDHUB_CLIENT --client-secret=$CREDHUB_SECRET $SKIP_TLS_VALIDATION

      if [ -z "$PREFIX" ]; then
        echo "Please specify a PREFIX. It is required."
        exit 1
      fi

       
      tar xvf $CERTIFICATE_FILE
      cd certificates
      credhub set -t certificate -n ${PREFIX}/${PIPELINE_NAME}/${KEY_NAME} -c _.${SUBDOMAIN}.crt -p _.${SUBDOMAIN}.key -r _.${SUBDOMAIN}.issuer.crt 
