groups:
- name: main
  jobs:
  - install-and-patch-pks
  - configure-pks-only
  - apply-change-pks
  - bbr-backup-pks
  - test
  - bootstrap-generate-domain-certificate
  - bootstrap-save-domain-certificate-to-credhub
  - install-opsman
  - configure-opsman-authentication
  - configure-director
  - opsman-custom-vm-extensions
  - apply-director-changes
  - upgrade-opsman
  - export-installation
  - extract-director-config
  - bbr-backup-director
- name: pks
  jobs:
  - install-and-patch-pks
  - configure-pks-only
  - apply-change-pks
  - bbr-backup-pks
  - test
- name: opsman
  jobs:
  - bootstrap-generate-domain-certificate
  - bootstrap-save-domain-certificate-to-credhub
  - install-opsman
  - configure-opsman-authentication
  - configure-director
  - opsman-custom-vm-extensions
  - apply-director-changes
  - upgrade-opsman
  - export-installation
  - extract-director-config
  - bbr-backup-director
- name: opsman-manual
  jobs:
  - configure-director-only
  - extract-director-config
  - export-installation
  - bbr-backup-director
  - bootstrap-generate-domain-certificate
  - bootstrap-save-domain-certificate-to-credhub
- name: opsman-delete
  jobs:
  - delete-opsman
  - delete-installation-from-opsman
resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final
- name: semver-config
  type: docker-image
  source:
    repository: itstarting/semver-config-concourse-resource
resources:
- name: pipeline-trigger-version-git
  type: semver
  source:
    driver: git
    uri: ((git.platform_automation_configs.uri))
    branch: ((git.platform_automation_configs.branch))
    file: foundations/((foundation))/pipeline_trigger_version_((pipeline_name))
    private_key: ((git.private_key))
- name: platform-automation-tasks
  type: s3
  source:
    endpoint: ((s3.endpoint))
    access_key_id: ((s3.access_key_id))
    bucket: ((s3.buckets.platform_automation))
    region_name: ((s3.region_name))
    secret_access_key: ((s3.secret_access_key))
    regexp: platform-automation-tasks-(.*).zip
    skip_ssl_verification: true
- name: platform-automation-image
  type: s3
  source:
    endpoint: ((s3.endpoint))
    access_key_id: ((s3.access_key_id))
    bucket: ((s3.buckets.platform_automation))
    region_name: ((s3.region_name))
    secret_access_key: ((s3.secret_access_key))
    regexp: platform-automation-image-(.*).tgz
    skip_ssl_verification: true
- name: pipelines
  type: git
  source:
    private_key: ((git.private_key))
    uri: ((git.platform_automation_pipelines.uri))
    branch: ((git.platform_automation_pipelines.branch))
    skip_ssl_verification: true
- name: configuration
  type: git
  source:
    private_key: ((git.private_key))
    uri: ((git.platform_automation_configs.uri))
    branch: ((git.platform_automation_configs.branch))
    skip_ssl_verification: true
- name: installation
  type: s3
  source:
    endpoint: ((s3.endpoint))
    access_key_id: ((s3.access_key_id))
    secret_access_key: ((s3.secret_access_key))
    region_name: ((s3.region_name))
    bucket: ((s3.buckets.installation))
    regexp: ((foundation))-installation-(.*).zip
    skip_ssl_verification: true
- name: domain_certificate
  type: s3
  source:
    endpoint: ((s3.endpoint))
    access_key_id: ((s3.access_key_id))
    secret_access_key: ((s3.secret_access_key))
    region_name: ((s3.region_name))
    bucket: ((s3.buckets.installation))
    regexp: certificate_*_(.*).tgz
    skip_ssl_verification: true
- name: opsman_vm_state
  type: git
  source:
    private_key: ((git.private_key))
    uri: ((git.platform_automation_configs.uri))
    branch: ((git.platform_automation_configs.branch))
    skip_ssl_verification: true
    paths:
    - foundations/((foundation))/state/state.yml
- name: opsman-version-git
  type: semver-config
  source:
    driver: git
    uri: ((git.platform_automation_configs.uri))
    branch: ((git.platform_automation_configs.branch))
    private_key: ((git.private_key))
    config_file: foundations/((foundation))/versions.yml
    config_path: products.opsman
    version_path: products.opsman.product-version
    version_pattern: m.n.p
- name: bbr-release-pivnet
  type: pivnet
  source:
    api_token: ((pivnet.token))
    product_slug: p-bosh-backup-and-restore
    product-version: ^1\.5\..*$
- name: bbr-director-backup-bucket
  type: s3
  source:
    endpoint: ((s3.endpoint))
    access_key_id: ((s3.access_key_id))
    secret_access_key: ((s3.secret_access_key))
    region_name: ((s3.region_name))
    bucket: ((s3.buckets.bbr-backup))
    regexp: ((foundation))-director-backup_(.*).tar
    skip_ssl_verification: true
- name: pks-version-git
  type: semver-config
  source:
    driver: git
    uri: ((git.platform_automation_configs.uri))
    branch: ((git.platform_automation_configs.branch))
    private_key: ((git.private_key))
    config_file: foundations/((foundation))/versions.yml
    config_path: products.pks
    version_path: products.pks.product-version
    version_pattern: m.n.p
- name: bbr-pks-backup-bucket
  type: s3
  source:
    endpoint: ((s3.endpoint))
    access_key_id: ((s3.access_key_id))
    secret_access_key: ((s3.secret_access_key))
    region_name: ((s3.region_name))
    bucket: ((s3.buckets.bbr-backup))
    regexp: ((foundation))-pivotal-container-service-backup_(.*).tgz
    skip_ssl_verification: true
jobs:
- name: bootstrap-generate-domain-certificate
  serial: true
  serial_groups:
  - serial-jobs
  plan:
  - in_parallel:
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: pipelines
    - get: configuration
  - do:
    - task: prepare_custom_tasks_with_secrets
      image: platform-automation-image
      file: pipelines/tasks/prepare-tasks-with-secrets.yml
      input_mapping:
        tasks: pipelines
        config: configuration
        vars: configuration
      params:
        CONFIG_PATHS: config/foundations/((foundation))/opsman
        VARS_PATHS: vars/foundations/((foundation))/generated-vars vars/foundations/((foundation))/vars
        TASKS_PATH: tasks/tasks
      output_mapping:
        tasks: pipelines
    - task: generate-domain-certificate
      file: pipelines/tasks/generate-certificate.yml
      input_mapping:
        config: configuration
      params:
        AWS_ACCESS_KEY_ID: ((certificate.generate.dns_privider_access_key))
        AWS_SECRET_ACCESS_KEY: ((certificate.generate.dns_privider_access_secret_key))
        AWS_REGION: ((certificate.generate.dns_provider_region))
        SUBDOMAIN: ((certificate.generate.subdomain))
        AWS_HOSTED_ZONE_ID: ((certificate.generate.dns_provider_hosted_zone_id))
        EMAIL: ((certificate.generate.letsencrypt_email))
    - put: domain_certificate
      params:
        file: generated-certificate//certificate_((certificate.generate.subdomain))_*.tgz
- name: bootstrap-save-domain-certificate-to-credhub
  serial: true
  serial_groups:
  - serial-jobs
  plan:
  - in_parallel:
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: pipelines
    - get: configuration
    - get: domain_certificate
  - do:
    - task: prepare_custom_tasks_with_secrets
      image: platform-automation-image
      file: pipelines/tasks/prepare-tasks-with-secrets.yml
      input_mapping:
        tasks: pipelines
        config: configuration
        vars: configuration
      params:
        CONFIG_PATHS: config/foundations/((foundation))/opsman
        VARS_PATHS: vars/foundations/((foundation))/generated-vars vars/foundations/((foundation))/vars
        TASKS_PATH: tasks/tasks
      output_mapping:
        tasks: pipelines
    - task: save-certificate-to-credhub
      image: platform-automation-image
      file: pipelines/tasks/save-certificate-to-credhub.yml
      input_mapping:
        config: configuration
        generated-certificate: domain_certificate
      params:
        CERTIFICATE_FILE: generated-certificate/certificate*.tgz
        SUBDOMAIN: ((certificate.generate.subdomain))
        CREDHUB_CA_CERT: ((credhub.ca_cert))
        CREDHUB_SECRET: ((credhub_client.password))
        CREDHUB_CLIENT: ((credhub_client.username))
        CREDHUB_SERVER: ((credhub.server))
        PIPELINE_NAME: ((pipeline_name))
        PREFIX: /concourse/main
        KEY_NAME: ((certificate.credhub_key_name))
- name: install-opsman
  serial: true
  serial_groups:
  - serial-jobs
  build_log_retention:
    days: 2
    builds: 100
  plan:
  - in_parallel:
    - get: pipeline-trigger-version-git
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: pipelines
    - get: configuration
    - get: opsman-version-git
    - get: opsman_vm_state
  - do:
    - task: prepare_tasks_with_secrets
      image: platform-automation-image
      file: platform-automation-tasks/tasks/prepare-tasks-with-secrets.yml
      input_mapping:
        tasks: platform-automation-tasks
        config: configuration
        vars: configuration
      params:
        CONFIG_PATHS: config/foundations/((foundation))/opsman
        VARS_PATHS: vars/foundations/((foundation))/generated-vars vars/foundations/((foundation))/vars
      output_mapping:
        tasks: platform-automation-tasks
    - task: prepare_tasks_with_product_version
      image: platform-automation-image
      file: pipelines/tasks/prepare-tasks-with-secrets.yml
      input_mapping:
        tasks: platform-automation-tasks
        config: opsman-version-git
        vars: configuration
      params:
        CONFIG_PATHS: config
        VARS_PATHS: vars/foundations/((foundation))/generated-vars vars/foundations/((foundation))/vars
      output_mapping:
        tasks: platform-automation-tasks
    - task: prepare_custom_tasks_with_secrets
      image: platform-automation-image
      file: pipelines/tasks/prepare-tasks-with-secrets.yml
      input_mapping:
        tasks: pipelines
        config: configuration
        vars: configuration
      params:
        CONFIG_PATHS: config/foundations/((foundation))/opsman
        VARS_PATHS: vars/foundations/((foundation))/generated-vars vars/foundations/((foundation))/vars
        TASKS_PATH: tasks/tasks
      output_mapping:
        tasks: pipelines
    - task: prepare_custom_tasks_with_product_version
      image: platform-automation-image
      file: pipelines/tasks/prepare-tasks-with-secrets.yml
      input_mapping:
        tasks: pipelines
        vars: configuration
        config: opsman-version-git
      params:
        CONFIG_PATHS: config
        VARS_PATHS: vars/foundations/((foundation))/generated-vars vars/foundations/((foundation))/vars
        TASKS_PATH: tasks/tasks
      output_mapping:
        tasks: pipelines
    - task: echo_files
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ubuntu
        inputs:
        - name: platform-automation-tasks
        params:
          FILE: platform-automation-tasks/tasks/download-product.yml
        run:
          path: bash
          args:
          - -exc
          - |
            cat $FILE
    - task: check-opsman-state-file
      image: platform-automation-image
      file: pipelines/tasks/check-opsman-state-file.yml
      input_mapping:
        config: configuration
      params:
        OPSMAN_CONFIG_FILE: foundations/((foundation))/opsman/opsman.yml
        STATE_FILE: foundations/((foundation))/state/state.yml
    - task: download-product
      image: platform-automation-image
      file: platform-automation-tasks/tasks/download-product.yml
      input_mapping:
        config: opsman-version-git
        vars: configuration
      params:
        CONFIG_FILE: semver-config.yaml
        VARS_FILES: vars/foundations/((foundation))/vars/versions.yml
    - task: create-vm
      image: platform-automation-image
      file: platform-automation-tasks/tasks/create-vm.yml
      input_mapping:
        image: downloaded-product
        config: configuration
        vars: configuration
        state: configuration
      params:
        OPSMAN_CONFIG_FILE: foundations/((foundation))/opsman/opsman.yml
        VARS_FILES: vars/foundations/((foundation))/vars/opsman.yml
        STATE_FILE: foundations/((foundation))/state/state.yml
      on_success:
        do:
        - task: opsman_state_make_commit
          image: platform-automation-image
          file: platform-automation-tasks/tasks/make-git-commit.yml
          input_mapping:
            repository: configuration
            file-source: generated-state
          output_mapping:
            repository-commit: configuration-commit
          params:
            FILE_SOURCE_PATH: state.yml
            FILE_DESTINATION_PATH: foundations/((foundation))/state/state.yml
            GIT_AUTHOR_EMAIL: ((git.user.email))
            GIT_AUTHOR_NAME: ((git.user.username))
            COMMIT_MESSAGE: Update from upgrade-opsman
        - put: configuration
          params:
            repository: configuration-commit
            merge: true
- name: configure-opsman-authentication
  serial: true
  serial_groups:
  - serial-jobs
  build_log_retention:
    days: 2
    builds: 100
  plan:
  - in_parallel:
    - get: pipeline-trigger-version-git
      passed:
      - install-opsman
      trigger: true
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: pipelines
    - get: configuration
  - do:
    - task: prepare_tasks_with_secrets
      image: platform-automation-image
      file: platform-automation-tasks/tasks/prepare-tasks-with-secrets.yml
      input_mapping:
        tasks: platform-automation-tasks
        config: configuration
        vars: configuration
      params:
        CONFIG_PATHS: config/foundations/((foundation))/opsman
        VARS_PATHS: vars/foundations/((foundation))/generated-vars vars/foundations/((foundation))/vars
      output_mapping:
        tasks: platform-automation-tasks
    - task: configure-authentication
      image: platform-automation-image
      file: platform-automation-tasks/tasks/configure-authentication.yml
      attempts: 10
      input_mapping:
        env: configuration
        config: configuration
      params:
        ENV_FILE: foundations/((foundation))/opsman/env.yml
        AUTH_CONFIG_FILE: foundations/((foundation))/opsman/auth.yml
- name: configure-director
  serial: true
  serial_groups:
  - serial-jobs
  build_log_retention:
    days: 2
    builds: 100
  plan:
  - in_parallel:
    - get: pipeline-trigger-version-git
      passed:
      - configure-opsman-authentication
      trigger: true
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: pipelines
    - get: configuration
  - do:
    - task: prepare_tasks_with_secrets
      image: platform-automation-image
      file: platform-automation-tasks/tasks/prepare-tasks-with-secrets.yml
      input_mapping:
        tasks: platform-automation-tasks
        config: configuration
        vars: configuration
      params:
        CONFIG_PATHS: config/foundations/((foundation))/opsman
        VARS_PATHS: vars/foundations/((foundation))/generated-vars vars/foundations/((foundation))/vars
      output_mapping:
        tasks: platform-automation-tasks
    - task: configure-director
      image: platform-automation-image
      file: platform-automation-tasks/tasks/configure-director.yml
      input_mapping:
        env: configuration
        config: configuration
        vars: configuration
      params:
        ENV_FILE: foundations/((foundation))/opsman/env.yml
        DIRECTOR_CONFIG_FILE: foundations/((foundation))/opsman/director.yml
        VARS_FILES: vars/foundations/((foundation))/vars/director.yml
- name: configure-director-only
  serial: true
  serial_groups:
  - serial-jobs
  build_log_retention:
    days: 2
    builds: 100
  plan:
  - in_parallel:
    - get: pipeline-trigger-version-git
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: pipelines
    - get: configuration
  - do:
    - task: prepare_tasks_with_secrets
      image: platform-automation-image
      file: platform-automation-tasks/tasks/prepare-tasks-with-secrets.yml
      input_mapping:
        tasks: platform-automation-tasks
        config: configuration
        vars: configuration
      params:
        CONFIG_PATHS: config/foundations/((foundation))/opsman
        VARS_PATHS: vars/foundations/((foundation))/generated-vars vars/foundations/((foundation))/vars
      output_mapping:
        tasks: platform-automation-tasks
    - task: configure-director
      image: platform-automation-image
      file: platform-automation-tasks/tasks/configure-director.yml
      input_mapping:
        env: configuration
        config: configuration
        vars: configuration
      params:
        ENV_FILE: foundations/((foundation))/opsman/env.yml
        DIRECTOR_CONFIG_FILE: foundations/((foundation))/opsman/director.yml
        VARS_FILES: vars/foundations/((foundation))/vars/director.yml
- name: opsman-custom-vm-extensions
  serial: true
  serial_groups:
  - serial-jobs
  build_log_retention:
    days: 2
    builds: 100
  plan:
  - in_parallel:
    - get: pipeline-trigger-version-git
      passed:
      - configure-director
      trigger: true
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: pipelines
    - get: configuration
  - do:
    - task: prepare_tasks_with_secrets
      image: platform-automation-image
      file: platform-automation-tasks/tasks/prepare-tasks-with-secrets.yml
      input_mapping:
        tasks: platform-automation-tasks
        config: configuration
        vars: configuration
      params:
        CONFIG_PATHS: config/foundations/((foundation))/opsman
        VARS_PATHS: vars/foundations/((foundation))/generated-vars vars/foundations/((foundation))/vars
      output_mapping:
        tasks: platform-automation-tasks
    - task: prepare_custom_tasks_with_secrets
      image: platform-automation-image
      file: pipelines/tasks/prepare-tasks-with-secrets.yml
      input_mapping:
        tasks: pipelines
        config: configuration
        vars: configuration
      params:
        CONFIG_PATHS: config/foundations/((foundation))/opsman
        VARS_PATHS: vars/foundations/((foundation))/generated-vars vars/foundations/((foundation))/vars
        TASKS_PATH: tasks/tasks
      output_mapping:
        tasks: pipelines
    - task: opsman-custom-vm-extensions-for-lb-security-groups
      image: platform-automation-image
      file: pipelines/tasks/opsman-custom-vm-extensions.yml
      input_mapping:
        env: configuration
      params:
        ENV_FILE: foundations/((foundation))/opsman/env.yml
- name: apply-director-changes
  serial: true
  serial_groups:
  - serial-jobs
  build_log_retention:
    days: 2
    builds: 100
  plan:
  - in_parallel:
    - get: pipeline-trigger-version-git
      params:
        bump: patch
      passed:
      - opsman-custom-vm-extensions
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: pipelines
    - get: configuration
  - do:
    - task: prepare_tasks_with_secrets
      image: platform-automation-image
      file: platform-automation-tasks/tasks/prepare-tasks-with-secrets.yml
      input_mapping:
        tasks: platform-automation-tasks
        config: configuration
        vars: configuration
      params:
        CONFIG_PATHS: config/foundations/((foundation))/opsman
        VARS_PATHS: vars/foundations/((foundation))/generated-vars vars/foundations/((foundation))/vars
      output_mapping:
        tasks: platform-automation-tasks
    - task: prepare_custom_tasks_with_secrets
      image: platform-automation-image
      file: pipelines/tasks/prepare-tasks-with-secrets.yml
      input_mapping:
        tasks: pipelines
        config: configuration
        vars: configuration
      params:
        CONFIG_PATHS: config/foundations/((foundation))/opsman
        VARS_PATHS: vars/foundations/((foundation))/generated-vars vars/foundations/((foundation))/vars
        TASKS_PATH: tasks/tasks
      output_mapping:
        tasks: pipelines
    - task: apply-director-changes
      image: platform-automation-image
      file: platform-automation-tasks/tasks/apply-director-changes.yml
      input_mapping:
        env: configuration
      params:
        ENV_FILE: foundations/((foundation))/opsman/env.yml
    - put: pipeline-trigger-version-git
      params:
        file: pipeline-trigger-version-git/version
- name: upgrade-opsman
  serial: true
  serial_groups:
  - serial-jobs
  build_log_retention:
    days: 2
    builds: 1000
  plan:
  - in_parallel:
    - get: pipeline-trigger-version-git
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: pipelines
    - get: configuration
    - get: opsman-version-git
    - get: opsman_vm_state
  - do:
    - task: prepare_tasks_with_secrets
      image: platform-automation-image
      file: platform-automation-tasks/tasks/prepare-tasks-with-secrets.yml
      input_mapping:
        tasks: platform-automation-tasks
        config: configuration
        vars: configuration
      params:
        CONFIG_PATHS: config/foundations/((foundation))/opsman
        VARS_PATHS: vars/foundations/((foundation))/generated-vars vars/foundations/((foundation))/vars
      output_mapping:
        tasks: platform-automation-tasks
    - task: prepare_custom_tasks_with_product_version
      image: platform-automation-image
      file: pipelines/tasks/prepare-tasks-with-secrets.yml
      input_mapping:
        tasks: pipelines
        vars: configuration
        config: opsman-version-git
      params:
        CONFIG_PATHS: config
        VARS_PATHS: vars/foundations/((foundation))/generated-vars vars/foundations/((foundation))/vars
        TASKS_PATH: tasks/tasks
      output_mapping:
        tasks: pipelines
    - task: download-product
      image: platform-automation-image
      file: platform-automation-tasks/tasks/download-product.yml
      input_mapping:
        config: opsman-version-git
      params:
        CONFIG_FILE: semver-config.yaml
    - task: export-installation
      image: platform-automation-image
      file: platform-automation-tasks/tasks/export-installation.yml
      input_mapping:
        env: configuration
      params:
        ENV_FILE: foundations/((foundation))/opsman/env.yml
        INSTALLATION_FILE: ((foundation))-installation-$timestamp.zip
    - task: upgrade-opsman
      image: platform-automation-image
      file: platform-automation-tasks/tasks/upgrade-opsman.yml
      input_mapping:
        image: downloaded-product
        state: configuration
        config: configuration
        env: configuration
        vars: configuration
      params:
        ENV_FILE: foundations/((foundation))/opsman/env.yml
        STATE_FILE: foundations/((foundation))/state/state.yml
        INSTALLATION_FILE: foundations/((foundation))-installation*.zip
        OPSMAN_CONFIG_FILE: foundations/((foundation))/opsman/opsman.yml
        VARS_FILES: vars/foundations/((foundation))/vars/opsman.yml
      ensure:
        do:
        - task: opsman_state_make_commit
          image: platform-automation-image
          file: platform-automation-tasks/tasks/make-git-commit.yml
          input_mapping:
            repository: configuration
            file-source: generated-state
          output_mapping:
            repository-commit: configuration-commit
          params:
            FILE_SOURCE_PATH: state.yml
            FILE_DESTINATION_PATH: foundations/((foundation))/state/state.yml
            GIT_AUTHOR_EMAIL: ((git.user.email))
            GIT_AUTHOR_NAME: ((git.user.username))
            COMMIT_MESSAGE: Update from upgrade-opsman
        - put: configuration
          params:
            repository: configuration-commit
            merge: true
- name: export-installation
  serial: true
  serial_groups:
  - serial-jobs
  build_log_retention:
    days: 2
    builds: 1000
  plan:
  - in_parallel:
    - get: pipeline-trigger-version-git
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: pipelines
    - get: configuration
    - get: opsman-version-git
    - get: opsman_vm_state
  - do:
    - task: prepare_tasks_with_secrets
      image: platform-automation-image
      file: platform-automation-tasks/tasks/prepare-tasks-with-secrets.yml
      input_mapping:
        tasks: platform-automation-tasks
        config: configuration
        vars: configuration
      params:
        CONFIG_PATHS: config/foundations/((foundation))/opsman
        VARS_PATHS: vars/foundations/((foundation))/generated-vars vars/foundations/((foundation))/vars
      output_mapping:
        tasks: platform-automation-tasks
    - task: prepare_custom_tasks_with_product_version
      image: platform-automation-image
      file: pipelines/tasks/prepare-tasks-with-secrets.yml
      input_mapping:
        tasks: pipelines
        vars: configuration
        config: opsman-version-git
      params:
        CONFIG_PATHS: config
        VARS_PATHS: vars/foundations/((foundation))/generated-vars vars/foundations/((foundation))/vars
        TASKS_PATH: tasks/tasks
      output_mapping:
        tasks: pipelines
    - task: export-installation
      image: platform-automation-image
      file: platform-automation-tasks/tasks/export-installation.yml
      input_mapping:
        env: configuration
      params:
        ENV_FILE: foundations/((foundation))/opsman/env.yml
        INSTALLATION_FILE: ((foundation))-installation-$timestamp.zip
    - put: installation
      params:
        file: installation/((foundation))-installation*.zip
- name: extract-director-config
  serial: true
  plan:
  - in_parallel:
    - get: pipeline-trigger-version-git
      trigger: true
      passed:
      - apply-director-changes
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: pipelines
    - get: configuration
  - do:
    - task: prepare_custom_tasks_with_secrets
      image: platform-automation-image
      file: pipelines/tasks/prepare-tasks-with-secrets.yml
      input_mapping:
        tasks: pipelines
        config: configuration
        vars: configuration
      params:
        CONFIG_PATHS: config/foundations/((foundation))/opsman
        VARS_PATHS: vars/foundations/((foundation))/generated-vars vars/foundations/((foundation))/vars
        TASKS_PATH: tasks/tasks
      output_mapping:
        tasks: pipelines
    - task: staged-config
      image: platform-automation-image
      file: pipelines/tasks/staged-director-config.yml
      input_mapping:
        config: configuration
        env: configuration
        vars: configuration
      params:
        ENV_FILE: foundations/((foundation))/opsman/env.yml
        SUBSTITUTE_CREDENTIALS_WITH_PLACEHOLDERS: false
- name: bbr-backup-director
  serial: true
  serial_groups:
  - bbr-backup
  plan:
  - in_parallel:
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: pipelines
    - get: configuration
    - get: bbr-release-pivnet
      params:
        globs:
        - bbr-*-linux-*
  - do:
    - task: prepare_custom_tasks_with_secrets
      image: platform-automation-image
      file: pipelines/tasks/prepare-tasks-with-secrets.yml
      input_mapping:
        tasks: pipelines
        config: configuration
        vars: configuration
      params:
        CONFIG_PATHS: config/foundations/((foundation))/opsman
        VARS_PATHS: vars/foundations/((foundation))/generated-vars vars/foundations/((foundation))/vars
        TASKS_PATH: tasks/tasks
      output_mapping:
        tasks: pipelines
    - task: bbr-cleanup
      file: pipelines/tasks/bbr-cleanup-director.yml
      input_mapping:
        bbr-release: bbr-release-pivnets
        config: configuration
      params:
        ENV_FILE: foundations/((foundation))/opsman/env.yml
    - task: bbr-backup
      file: pipelines/tasks/bbr-backup-director.yml
      input_mapping:
        bbr-release: bbr-release-pivnet
        config: configuration
      params:
        ENV_FILE: foundations/((foundation))/opsman/env.yml
        FOUNDATION: ((foundation))
      on_failure:
        task: bbr-cleanup
        file: pipelines/tasks/bbr-cleanup-director.yml
        input_mapping:
          bbr-release: bbr-release-pivnets
          config: configuration
        params:
          ENV_FILE: foundations/((foundation))/opsman/env.yml
    - put: bbr-director-backup-bucket
      params:
        file: backup-artifact/((foundation))-director-backup_*.tgz
- name: delete-opsman
  serial: true
  serial_groups:
  - serial-jobs
  build_log_retention:
    days: 2
    builds: 1000
  plan:
  - in_parallel:
    - get: pipeline-trigger-version-git
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: pipelines
    - get: configuration
    - get: opsman-version-git
    - get: opsman_vm_state
  - do:
    - task: prepare_tasks_with_secrets
      image: platform-automation-image
      file: platform-automation-tasks/tasks/prepare-tasks-with-secrets.yml
      input_mapping:
        tasks: platform-automation-tasks
        config: configuration
        vars: configuration
      params:
        CONFIG_PATHS: config/foundations/((foundation))/opsman
        VARS_PATHS: vars/foundations/((foundation))/generated-vars vars/foundations/((foundation))/vars
      output_mapping:
        tasks: platform-automation-tasks
    - task: delete-vm
      image: platform-automation-image
      file: platform-automation-tasks/tasks/delete-vm.yml
      input_mapping:
        config: configuration
        state: opsman_vm_state
        vars: configuration
      params:
        OPSMAN_CONFIG_FILE: foundations/((foundation))/opsman/opsman.yml
        VARS_FILES: vars/foundations/((foundation))/vars/opsman.yml
        STATE_FILE: foundations/((foundation))/state/state.yml
      ensure:
        do:
        - task: opsman_state_make_commit
          image: platform-automation-image
          file: platform-automation-tasks/tasks/make-git-commit.yml
          input_mapping:
            repository: configuration
            file-source: generated-state
          output_mapping:
            repository-commit: configuration-commit
          params:
            FILE_SOURCE_PATH: state.yml
            FILE_DESTINATION_PATH: foundations/((foundation))/state/state.yml
            GIT_AUTHOR_EMAIL: ((git.user.email))
            GIT_AUTHOR_NAME: ((git.user.username))
            COMMIT_MESSAGE: Update from upgrade-opsman
        - put: configuration
          params:
            repository: configuration-commit
            merge: true
- name: delete-installation-from-opsman
  serial: true
  serial_groups:
  - serial-jobs
  build_log_retention: null
  plan:
  - in_parallel:
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: configuration
  - do:
    - task: prepare_tasks_with_secrets
      image: platform-automation-image
      file: platform-automation-tasks/tasks/prepare-tasks-with-secrets.yml
      input_mapping:
        tasks: platform-automation-tasks
        config: configuration
        vars: configuration
      params:
        CONFIG_PATHS: config/foundations/((foundation))/opsman
        VARS_PATHS: vars/foundations/((foundation))/generated-vars vars/foundations/((foundation))/vars
      output_mapping:
        tasks: platform-automation-tasks
    - task: delete-installation
      image: platform-automation-image
      file: platform-automation-tasks/tasks/delete-installation.yml
      input_mapping:
        config: configuration
      params:
        ENV_FILE: foundations/((foundation))/opsman/env.yml
- name: install-and-patch-pks
  serial: true
  serial_groups:
  - serial-jobs
  plan:
  - in_parallel:
    - get: pipeline-trigger-version-git
      trigger: false
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: pipelines
    - get: configuration
    - get: pks-version-git
  - do:
    - task: prepare_tasks_with_secrets
      image: platform-automation-image
      file: platform-automation-tasks/tasks/prepare-tasks-with-secrets.yml
      input_mapping:
        tasks: platform-automation-tasks
        config: configuration
        vars: configuration
      params:
        CONFIG_PATHS: config/foundations/((foundation))/opsman config/foundations/((foundation))/products
        VARS_PATHS: vars/foundations/((foundation))/generated-vars vars/foundations/((foundation))/vars
      output_mapping:
        tasks: platform-automation-tasks
    - task: prepare_tasks_with_product_version
      image: platform-automation-image
      file: pipelines/tasks/prepare-tasks-with-secrets.yml
      input_mapping:
        tasks: platform-automation-tasks
        config: pks-version-git
        vars: configuration
      params:
        CONFIG_PATHS: config
        VARS_PATHS: vars/foundations/((foundation))/generated-vars vars/foundations/((foundation))/vars
      output_mapping:
        tasks: platform-automation-tasks
    - task: prepare_custom_tasks_with_secrets
      image: platform-automation-image
      file: pipelines/tasks/prepare-tasks-with-secrets.yml
      input_mapping:
        tasks: pipelines
        config: configuration
        vars: configuration
      params:
        CONFIG_PATHS: config/foundations/((foundation))/opsman config/foundations/((foundation))/products
        VARS_PATHS: vars/foundations/((foundation))/generated-vars vars/foundations/((foundation))/vars
        TASKS_PATH: tasks/tasks
      output_mapping:
        tasks: pipelines
    - task: prepare_custom_tasks_with_product_version
      image: platform-automation-image
      file: pipelines/tasks/prepare-tasks-with-secrets.yml
      input_mapping:
        tasks: pipelines
        vars: configuration
        config: pks-version-git
      params:
        CONFIG_PATHS: config
        VARS_PATHS: vars/foundations/((foundation))/generated-vars vars/foundations/((foundation))/vars
        TASKS_PATH: tasks/tasks
    - task: download_product
      image: platform-automation-image
      file: platform-automation-tasks/tasks/download-product.yml
      input_mapping:
        config: pks-version-git
        vars: configuration
      params:
        CONFIG_FILE: semver-config.yaml
        VARS_FILES: vars/foundations/((foundation))/vars/versions.yml
    - task: upload_product
      image: platform-automation-image
      file: platform-automation-tasks/tasks/upload-product.yml
      input_mapping:
        product: downloaded-product
        env: configuration
      params:
        ENV_FILE: foundations/((foundation))/opsman/env.yml
    - task: upload_stemcell
      image: platform-automation-image
      file: platform-automation-tasks/tasks/upload-stemcell.yml
      input_mapping:
        stemcell: downloaded-stemcell
        env: configuration
      params:
        ENV_FILE: foundations/((foundation))/opsman/env.yml
        FLOATING_STEMCELL: false
    - task: stage_configure_apply
      image: platform-automation-image
      file: platform-automation-tasks/tasks/stage-configure-apply.yml
      input_mapping:
        product: downloaded-product
        env: configuration
        config: configuration
      params:
        CONFIG_FILE: foundations/((foundation))/products/pks.yml
        ENV_FILE: foundations/((foundation))/opsman/env.yml
        VARS_FILES: config/foundations/((foundation))/generated-vars/pks.yml config/foundations/((foundation))/vars/pks.yml
- name: configure-pks-only
  serial: true
  serial_groups:
  - serial-jobs
  plan:
  - in_parallel:
    - get: pipeline-trigger-version-git
      trigger: false
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: pipelines
    - get: configuration
  - do:
    - task: prepare_tasks_with_secrets
      image: platform-automation-image
      file: platform-automation-tasks/tasks/prepare-tasks-with-secrets.yml
      input_mapping:
        tasks: platform-automation-tasks
        config: configuration
        vars: configuration
      params:
        CONFIG_PATHS: config/foundations/((foundation))/opsman config/foundations/((foundation))/products
        VARS_PATHS: vars/foundations/((foundation))/generated-vars vars/foundations/((foundation))/vars
      output_mapping:
        tasks: platform-automation-tasks
    - task: prepare_custom_tasks_with_secrets
      image: platform-automation-image
      file: pipelines/tasks/prepare-tasks-with-secrets.yml
      input_mapping:
        tasks: pipelines
        config: configuration
        vars: configuration
      params:
        CONFIG_PATHS: config/foundations/((foundation))/opsman config/foundations/((foundation))/products
        VARS_PATHS: vars/foundations/((foundation))/generated-vars vars/foundations/((foundation))/vars
        TASKS_PATH: tasks/tasks
      output_mapping:
        tasks: pipelines
    - task: configure_product
      image: platform-automation-image
      file: platform-automation-tasks/tasks/configure-product.yml
      input_mapping:
        config: configuration
        env: configuration
      params:
        CONFIG_FILE: foundations/((foundation))/products/pks.yml
        ENV_FILE: foundations/((foundation))/opsman/env.yml
        VARS_FILES: config/foundations/((foundation))/generated-vars/pks.yml config/foundations/((foundation))/vars/pks.yml
- name: apply-change-pks
  serial: true
  serial_groups:
  - serial-jobs
  plan:
  - in_parallel:
    - get: pipeline-trigger-version-git
      passed:
      - configure-pks-only
      trigger: false
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: pipelines
    - get: configuration
  - do:
    - task: prepare_tasks_with_secrets
      image: platform-automation-image
      file: platform-automation-tasks/tasks/prepare-tasks-with-secrets.yml
      input_mapping:
        tasks: platform-automation-tasks
        config: configuration
        vars: configuration
      params:
        CONFIG_PATHS: config/foundations/((foundation))/opsman config/foundations/((foundation))/products
        VARS_PATHS: vars/foundations/((foundation))/generated-vars vars/foundations/((foundation))/vars
      output_mapping:
        tasks: platform-automation-tasks
    - task: prepare_custom_tasks_with_secrets
      image: platform-automation-image
      file: pipelines/tasks/prepare-tasks-with-secrets.yml
      input_mapping:
        tasks: pipelines
        config: configuration
        vars: configuration
      params:
        CONFIG_PATHS: config/foundations/((foundation))/opsman config/foundations/((foundation))/products
        VARS_PATHS: vars/foundations/((foundation))/generated-vars vars/foundations/((foundation))/vars
        TASKS_PATH: tasks/tasks
      output_mapping:
        tasks: pipelines
    - task: configure_product
      image: platform-automation-image
      file: platform-automation-tasks/tasks/configure-product.yml
      input_mapping:
        config: configuration
        env: configuration
      params:
        CONFIG_FILE: foundations/((foundation))/products/pks.yml
        ENV_FILE: foundations/((foundation))/opsman/env.yml
        VARS_FILES: config/foundations/((foundation))/generated-vars/pks.yml config/foundations/((foundation))/vars/pks.yml
    - task: apply_product_changes
      image: platform-automation-image
      file: pipelines/tasks/apply-product-changes.yml
      input_mapping:
        env: configuration
      params:
        ENV_FILE: foundations/((foundation))/opsman/env.yml
        PRODUCT_NAME: pivotal-container-service
- name: bbr-backup-pks
  serial: true
  serial_groups:
  - bbr-backup
  plan:
  - in_parallel:
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: pipelines
    - get: configuration
    - get: bbr-release-pivnet
      params:
        globs:
        - bbr-*-linux-*
  - do:
    - task: prepare_custom_tasks_with_secrets
      image: platform-automation-image
      file: pipelines/tasks/prepare-tasks-with-secrets.yml
      input_mapping:
        tasks: pipelines
        config: configuration
        vars: configuration
      params:
        CONFIG_PATHS: config/foundations/((foundation))/opsman config/foundations/((foundation))/products
        VARS_PATHS: vars/foundations/((foundation))/generated-vars vars/foundations/((foundation))/vars
        TASKS_PATH: tasks/tasks
      output_mapping:
        tasks: pipelines
    - task: bbr-cleanup
      file: pipelines/tasks/bbr-cleanup-product.yml
      input_mapping:
        bbr-release: bbr-release-pivnet
        config: configuration
      params:
        ENV_FILE: foundations/((foundation))/opsman/env.yml
        PRODUCT_NAME: pivotal-container-service
    - task: bbr-backup
      file: pipelines/tasks/bbr-backup-product.yml
      input_mapping:
        bbr-release: bbr-release-pivnet
        config: configuration
      params:
        ENV_FILE: foundations/((foundation))/opsman/env.yml
        FOUNDATION: ((foundation))
        PRODUCT_NAME: pivotal-container-service
      on_failure:
        task: bbr-cleanup
        file: pipelines/tasks/bbr-cleanup-product.yml
        input_mapping:
          bbr-release: bbr-release-pivnet
          config: configuration
        params:
          ENV_FILE: foundations/((foundation))/opsman/env.yml
          PRODUCT_NAME: pivotal-container-service
    - put: bbr-pks-backup-bucket
      params:
        file: backup-artifact/((foundation))-pivotal-container-service-backup_*.tgz
- name: test
  serial: true
  plan:
  - in_parallel:
    - get: pipeline-trigger-version-git
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: pipelines
    - get: configuration
    - get: pks-version-git
  - do:
    - task: test
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ubuntu
        params:
          FILE: null
          WORLD_PARAM: ((opsman_ssh_key.public_key))
        run:
          path: bash
          args:
          - -exc
          - |
            echo "hi"
            echo "$WORLD_PARAM"
    - task: prepare_tasks_with_secrets
      image: platform-automation-image
      file: platform-automation-tasks/tasks/prepare-tasks-with-secrets.yml
      input_mapping:
        tasks: platform-automation-tasks
        config: configuration
        vars: configuration
      params:
        CONFIG_PATHS: config/foundations/((foundation))/opsman config/foundations/((foundation))/products
        VARS_PATHS: vars/foundations/((foundation))/generated-vars vars/foundations/((foundation))/vars
      output_mapping:
        tasks: platform-automation-tasks
    - task: prepare_custom_tasks_with_secrets
      image: platform-automation-image
      file: pipelines/tasks/prepare-tasks-with-secrets.yml
      input_mapping:
        tasks: pipelines
        config: configuration
        vars: configuration
      params:
        CONFIG_PATHS: config/foundations/((foundation))/opsman config/foundations/((foundation))/products
        VARS_PATHS: vars/foundations/((foundation))/generated-vars vars/foundations/((foundation))/vars
        TASKS_PATH: tasks/tasks
      output_mapping:
        tasks: pipelines
    - task: prepare_custom_tasks_with_product_version
      image: platform-automation-image
      file: pipelines/tasks/prepare-tasks-with-secrets.yml
      input_mapping:
        tasks: pipelines
        vars: configuration
        config: pks-version-git
      params:
        CONFIG_PATHS: config
        VARS_PATHS: vars/foundations/((foundation))/generated-vars vars/foundations/((foundation))/vars
        TASKS_PATH: tasks/tasks
